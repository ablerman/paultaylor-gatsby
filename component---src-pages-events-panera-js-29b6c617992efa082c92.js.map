{"version":3,"sources":["webpack:///./src/constants/panera.js","webpack:///./src/pages/events/panera.js"],"names":["panera","Object","photosetBuilder","panera_Amazon","closeCarousel","pathname","_this","props","location","gatsby_browser_entry","renderContent","queryParams","query_string","search","undefined","image","react_default","a","createElement","Carousel","photos","currentPhoto","onClose","PhotoPage","title","render","Layout","this","Component","__webpack_exports__","styles","theme","_root","root","breakpoints","up","marginLeft"],"mappings":"2MAEeA,EAAAC,OAAAC,EAAA,GAAQ,SAAU,SAAU,ICgBrCC,sJAEFC,cAAgB,WACZ,IAAMC,EAAWC,EAAKC,MAAMC,SAASH,SACrCJ,OAAAQ,EAAA,SAAAR,CAASI,MAGbK,cAAgB,WACZ,IAAMC,EAAcV,OAAAW,EAAA,MAAAX,CAAMK,EAAKC,MAAMC,SAASK,QAC9C,YAA0BC,IAAtBH,EAAYI,MAERC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,OAAQpB,EACRqB,aAAcV,EAAYI,MAC1BO,QAAShB,EAAKF,cACdI,SAAUF,EAAKC,MAAMC,WAKzBQ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,MAAM,SACNJ,OAAQpB,mCAMxByB,kBACI,OACIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQlB,SAAUmB,KAAKpB,MAAMC,UACxBmB,KAAKjB,qBA/BDM,EAAAC,EAAMW,WAqCZC,EAAA,QAAA5B,OAAA6B,EAAA,WAAA7B,CA7CA,SAAA8B,GAAK,IAAAC,EAAA,MAAK,CACrBC,MAAID,EAAA,GAAAA,EACCD,EAAMG,YAAYC,GAAG,OAAQ,CAC1BC,WAAY,SAFhBJ,KA4CO,CAAmB7B","file":"component---src-pages-events-panera-js-29b6c617992efa082c92.js","sourcesContent":["import builder from './photosetBuilder';\n\nexport default builder('panera', 'panera', 34);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { parse } from 'query-string';\nimport { navigate } from \"gatsby\"\nimport Layout from '../../components/Layout'\nimport PhotoPage from '../../components/PhotoPage/PhotoPage';\nimport Carousel from '../../components/Carousel';\n\nimport photos from '../../constants/panera';\n\nconst styles = theme => ({\n    root: {\n        [theme.breakpoints.up('md')]: {\n            marginLeft: '255px'\n        }\n    }\n});\n\nclass Amazon extends React.Component {\n\n    closeCarousel = () => {\n        const pathname = this.props.location.pathname;\n        navigate(pathname);\n    }\n\n    renderContent = () => {\n        const queryParams = parse(this.props.location.search);\n        if (queryParams.image !== undefined) {\n            return (\n                <Carousel\n                    photos={photos}\n                    currentPhoto={queryParams.image}\n                    onClose={this.closeCarousel}\n                    location={this.props.location}\n                />\n            );\n        } else {\n            return (\n                <PhotoPage\n                    title=\"Panera\"\n                    photos={photos}\n                />\n            );\n        }\n    };\n\n    render() {\n        return (\n            <Layout location={this.props.location}>\n                {this.renderContent()}\n            </Layout>\n        )\n    }\n}\n\nexport default withStyles(styles)(Amazon);\n"],"sourceRoot":""}